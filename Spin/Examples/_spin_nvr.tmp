never MutualExclusion {    /* !([] (! ((((in_cs[0]) && (in_cs[1])) && (in_cs[2])) && (in_cs[3])))) */
T0_init:
	if
	:: (! ((! ((((in_cs[0]) && (in_cs[1])) && (in_cs[2])) && (in_cs[3]))))) -> goto accept_all
	:: (1) -> goto T0_init
	fi;
accept_all:
	skip
}
never F_NeverEnter {    /* !([] (! ((((in_cs[0]) || (in_cs[1])) || (in_cs[2])) || (in_cs[3])))) */
T0_init:
	if
	:: (! ((! ((((in_cs[0]) || (in_cs[1])) || (in_cs[2])) || (in_cs[3]))))) -> goto accept_all
	:: (1) -> goto T0_init
	fi;
accept_all:
	skip
}
never EventuallyEnter {    /* !([] ((! ((((want_cs[0]) || (want_cs[1])) || (want_cs[2])) || (want_cs[3]))) || (<> ((((in_cs[0]) || (in_cs[1])) || (in_cs[2])) || (in_cs[3]))))) */
T0_init:
	if
	:: (! ((! ((((want_cs[0]) || (want_cs[1])) || (want_cs[2])) || (want_cs[3])))) && ! (((((in_cs[0]) || (in_cs[1])) || (in_cs[2])) || (in_cs[3])))) -> goto accept_S4
	:: (1) -> goto T0_init
	fi;
accept_S4:
	if
	:: (! (((((in_cs[0]) || (in_cs[1])) || (in_cs[2])) || (in_cs[3])))) -> goto accept_S4
	fi;
}
never AllCanEnter {    /* !([] (((((! (want_cs[0])) || (<> (in_cs[0]))) && ((! (want_cs[1])) || (<> (in_cs[1])))) && ((! (want_cs[2])) || (<> (in_cs[2])))) && ((! (want_cs[3])) || (<> (in_cs[3]))))) */
T0_init:
	if
	:: (! ((! (want_cs[3]))) && ! ((in_cs[3])) && ((! ((! (want_cs[0])))) || (((! ((! (want_cs[1])))) || (((! ((! (want_cs[2])))) || (! ((! (want_cs[3])))))))))) -> goto accept_S7
	:: (! ((! (want_cs[2]))) && ! ((in_cs[2])) && ((! ((! (want_cs[0])))) || (((! ((! (want_cs[1])))) || (((! ((! (want_cs[2])))) || (! ((! (want_cs[3])))))))))) -> goto accept_S12
	:: (! ((! (want_cs[1]))) && ! ((in_cs[1]))) -> goto accept_S17
	:: (! ((! (want_cs[0]))) && ! ((in_cs[0]))) -> goto accept_S22
	:: (1) -> goto T0_init
	fi;
accept_S7:
	if
	:: (! ((in_cs[3]))) -> goto accept_S7
	fi;
accept_S12:
	if
	:: (! ((in_cs[2]))) -> goto accept_S12
	fi;
accept_S17:
	if
	:: (! ((in_cs[1]))) -> goto accept_S17
	fi;
accept_S22:
	if
	:: (! ((in_cs[0]))) -> goto accept_S22
	fi;
}
